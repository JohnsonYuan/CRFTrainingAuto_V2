<?xml version="1.0" encoding="utf-8" ?>
<CRFTrainingAuto xmlns="http://schemas.microsoft.com/tts/toolsuite">
  <!--the char need to be trained-->
  <TrainingChar name="背">
    <Language>zh-CN</Language>
    <!-- crf trained file Name -->
    <OutputCRFName>hai.crf</OutputCRFName>
    <!-- used in CRFMapping txt file, if true(1), Bing_Used, else Unused -->
    <Enabled>1</Enabled>
    <DefaultWordPron>yi i_h i_h</DefaultWordPron>
    <!-- filtered case min length -->
    <MinCaseLength>5</MinCaseLength>
    <!--currently, we use 1000 cases as training set, others(500) cases as test set-->
    <MaxCaseCount>1500</MaxCaseCount>
    <NCrossCaseCount>1000</NCrossCaseCount>
    <NFolderCount>10</NFolderCount>
  </TrainingChar>
  <!--Add prons here, pingyin attribute is for LE, native pron is inner value-->
  <Prons>
    <Pron pinyin="bei1">b eh_h i_h</Pron>
    <Pron pinyin="bei4">b eh_h i_l</Pron>
  </Prons>
  <Paths>
    <!--modify branch root path here-->
    <BranchRootPath>D:\Enlistments\IPESpeechCore_Dev</BranchRootPath>
    <Arch>amd64</Arch>
  </Paths>
  <!--0 disable multi thread when filtering from corpus-->
  <MaxThreadCount>4</MaxThreadCount>
  <!-- this is not required, used to show progress when filtering from corpus-->
  <ShowTipCount>50</ShowTipCount>
  <TrainingConfigTemplate>
    <Training>
      <![CDATA[<?xml version="1.0" encoding="utf-8"?>
      <flow xmlns="http://schemas.microsoft.com/tts/toolsuite">
        <include src="#polyphony.config">
          <input name="$feature.TargetWord">#charName#</input>
          <input name="$env.Language">#lang: zh-CN#</input>
          <input name="$env.LexiconSchemaFile">#branch_root#\private\dev\speech\tts\shenzhou\data\#lang#\Language\TAData\Lexicon\schema.xml</input>
          <input name="$env.LinguisticFeatureListFile">#current dir#\features.config</input>
          <input name="$env.OutputDir">#current dir#</input>
          <input name="$env.PhoneSetFile">#branch_root#\private\dev\speech\tts\shenzhou\data\#lang#\Language\TAData\Phone\phoneset.xml</input>
          <input name="$env.Script">#current dir#</input>
          <input name="$crfTrainer.FeatureMinOccur">2</input>
        </include>
      </flow>]]>
    </Training>
    <Features>
      <![CDATA[<?xml version="1.0" encoding="utf-16"?>
        <featureSet xmlns="http://schemas.microsoft.com/tts">
          <!-- The user feature's naming should follow FEE convention strictly. -->

          <!-- previous 3 characters and combinations -->
          <feature name="Token.PreviousCharacters.GetCharacter(2)" extract="true" />
          <feature name="Token.PreviousCharacters.GetCharacter(1)" extract="true" />
          <feature name="Token.PreviousCharacters.GetCharacter(0)" extract="true" />
          <feature name="Token.PreviousCharacters.GetCharacter(2)/Token.PreviousCharacters.GetCharacter(1)" extract="true" />
          <feature name="Token.PreviousCharacters.GetCharacter(1)/Token.PreviousCharacters.GetCharacter(0)" extract="true" />
          <feature name="Token.PreviousCharacters.GetCharacter(2)/Token.PreviousCharacters.GetCharacter(1)/Token.PreviousCharacters.GetCharacter(0)" extract="true" />

          <!-- next 3 characters and combinations -->
          <feature name="Token.NextCharacters.GetCharacter(0)" extract="true" />
          <feature name="Token.NextCharacters.GetCharacter(1)" extract="true" />
          <feature name="Token.NextCharacters.GetCharacter(2)" extract="true" />
          <feature name="Token.NextCharacters.GetCharacter(0)/Token.NextCharacters.GetCharacter(1)" extract="true" />
          <feature name="Token.NextCharacters.GetCharacter(1)/Token.NextCharacters.GetCharacter(2)" extract="true" />
          <feature name="Token.NextCharacters.GetCharacter(0)/Token.NextCharacters.GetCharacter(1)/Token.NextCharacters.GetCharacter(2)" extract="true" />

          <!-- previous 3 words and combinations -->
          <feature name="Token.PrevToken.PrevToken.PrevToken.CaseInsensitiveText" extract="true" />
          <feature name="Token.PrevToken.PrevToken.CaseInsensitiveText" extract="true" />
          <feature name="Token.PrevToken.CaseInsensitiveText" extract="true" />
          <feature name="Token.PrevToken.PrevToken.PrevToken.CaseInsensitiveText/Token.PrevToken.PrevToken.CaseInsensitiveText" extract="true" />
          <feature name="Token.PrevToken.PrevToken.CaseInsensitiveText/Token.PrevToken.CaseInsensitiveText" extract="true" />
          <feature name="Token.PrevToken.PrevToken.PrevToken.CaseInsensitiveText/Token.PrevToken.PrevToken.CaseInsensitiveText/Token.PrevToken.CaseInsensitiveText" extract="true" />

          <!-- next 3 words and combinations -->
          <feature name="Token.NextToken.CaseInsensitiveText" extract="true" />
          <feature name="Token.NextToken.NextToken.CaseInsensitiveText" extract="true" />
          <feature name="Token.NextToken.NextToken.NextToken.CaseInsensitiveText" extract="true" />
          <feature name="Token.NextToken.CaseInsensitiveText/Token.NextToken.NextToken.CaseInsensitiveText" extract="true" />
          <feature name="Token.NextToken.NextToken.CaseInsensitiveText/Token.NextToken.NextToken.NextToken.CaseInsensitiveText" extract="true" />
          <feature name="Token.NextToken.CaseInsensitiveText/Token.NextToken.NextToken.CaseInsensitiveText/Token.NextToken.NextToken.NextToken.CaseInsensitiveText" extract="true" />
        </featureSet>]]>
    </Features>
  </TrainingConfigTemplate>
</CRFTrainingAuto>